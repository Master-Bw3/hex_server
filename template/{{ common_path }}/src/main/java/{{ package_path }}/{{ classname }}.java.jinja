{% from "macros/mappings.jinja" import mappings as _, import, ns with context -%}

package {{ package }};

import {{ package }}.registry.{{ classname }}IotaTypeRegistry;
import {{ package }}.registry.{{ classname }}ItemRegistry;
import {{ package }}.registry.{{ classname }}PatternRegistry;
{{ import(
    mojmap="net.minecraft.resources.ResourceLocation",
    yarn="net.minecraft.util.Identifier",
) }}{% set ResourceLocation = ns.import %};
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 * This is effectively the loading entrypoint for most of your code, at least
 * if you are using Architectury as intended.
 */
public class {{ classname }} {
    public static final String MOD_ID = "{{ modid }}";
    public static final Logger LOGGER = LogManager.getLogger(MOD_ID);


    public static void init() {
        LOGGER.info("{{ display_name }} says hello!");

        {{ classname }}ItemRegistry.init();
        {{ classname }}IotaTypeRegistry.init();
        {{ classname }}PatternRegistry.init();

        LOGGER.info({{ classname }}Abstractions.getConfigDirectory().toAbsolutePath().normalize().toString());
    }

    /**
     * Shortcut for identifiers specific to this mod.
     */
    public static {{ ResourceLocation }} id(String string) {
        return new {{ ResourceLocation }}(MOD_ID, string);
    }
}
